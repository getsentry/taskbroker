on:
  pull_request:
  push:
    branches:
      - main
      - release/**
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    name: build-${{ matrix.platform }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build and push taskbroker image
        uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
        with:
          image_name: 'taskbroker'
          platforms: linux/${{ matrix.platform }}
          dockerfile_path: './Dockerfile'
          build_args: TASKBROKER_GIT_REVISION=${{ github.sha }}
          ghcr: true
          tag_suffix: -${{ matrix.platform }}
          publish_on_pr: true
          google_ar: false
          tag_nightly: false
          tag_latest: false

  assemble-taskbroker-image:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ (github.ref_name == 'main' || startsWith(github.ref_name, 'releases/')) && github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Create multiplatform manifests
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/getsentry/taskbroker:${{ github.event.pull_request.head.sha || github.sha }} \
            --tag ghcr.io/getsentry/taskbroker:nightly \
            --tag ghcr.io/getsentry/taskbroker:latest \
            ghcr.io/getsentry/taskbroker:${{ github.event.pull_request.head.sha || github.sha }}-amd64 \
            ghcr.io/getsentry/taskbroker:${{ github.event.pull_request.head.sha || github.sha }}-arm64

  self-hosted-end-to-end:
    needs: [assemble-taskbroker-image]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Run Sentry self-hosted e2e CI
        uses: getsentry/self-hosted@master
        with:
          project_name: taskbroker
          image_url: ghcr.io/getsentry/taskbroker:${{ github.sha }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-taskworker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
      env:
        GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name != 'pull_request'

    - name: Build and push taskworker image
      uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
      with:
        image_name: 'taskworker'
        platforms: linux/amd64
        build_context: './python'
        dockerfile_path: './python/Dockerfile'
        ghcr: true
        tag_nightly: false
        tags: ghcr.io/getsentry/taskworker:amd64-latest
        tag_latest: true
