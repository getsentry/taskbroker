on:
  pull_request:
  push:
    branches:
      - main
      - release/**
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    name: build-${{ matrix.platform }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build
        uses: docker/build-push-action@32945a339266b759abcbdc89316275140b0fc960 # v6.8.10
        with:
          context: .
          cache-from: ghcr.io/getsentry/taskbroker:latest
          cache-to: type=inline
          platforms: linux/${{ matrix.platform }}
          tags: taskbroker:${{ matrix.platform }}
          outputs: type=docker,dest=/tmp/taskbroker-${{ matrix.platform }}.tar
          push: false

      - name: Upload Image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: taskbroker-${{ matrix.platform }}
          path: /tmp/taskbroker-${{ matrix.platform }}.tar

  assemble-taskbroker-image:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Download amd64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: taskbroker-amd64
          path: /tmp

      - name: Load amd64 Image
        run: docker load --input /tmp/taskbroker-amd64.tar

      - name: Download arm64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: taskbroker-arm64
          path: /tmp

      - name: Load arm64 Image
        run: docker load --input /tmp/taskbroker-arm64.tar

      - name: Push to GitHub Container Registry
        run: |
          docker tag taskbroker:amd64 ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64
          docker push ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64

          docker tag taskbroker:arm64 ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64
          docker push ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest create \
            ghcr.io/getsentry/taskbroker:${{ github.sha }} \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/taskbroker:${{ github.sha }}

          docker manifest create \
            ghcr.io/getsentry/taskbroker:latest \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/taskbroker:latest

          docker manifest create \
            ghcr.io/getsentry/taskbroker:nightly \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/taskbroker:nightly

  build-production:
    runs-on: ubuntu-24.04
    if: github.ref_name == github.event.repository.default_branch
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build and push taskbroker image
        uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
        with:
          image_name: 'taskbroker'
          platforms: linux/amd64
          dockerfile_path: './Dockerfile'
          build_args: TASKBROKER_GIT_REVISION=${{ github.sha }}
          ghcr: false
          google_ar: true
          tag_nightly: false
          tag_latest: true
          # TODO: remove this once we cut over GoCD to using gha for prod images
          tag_suffix: -gha
          google_ar_image_name: us-central1-docker.pkg.dev/sentryio/taskbroker/image:${{ github.sha }}
          google_workload_identity_provider: projects/868781662168/locations/global/workloadIdentityPools/prod-github/providers/github-oidc-pool
          google_service_account: gha-gcr-push@sac-prod-sa.iam.gserviceaccount.com

      - name: Build and push taskworker image
        uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
        with:
          image_name: 'taskworker'
          platforms: linux/amd64
          dockerfile_path: './python/Dockerfile'
          build_context: './python'
          ghcr: false
          google_ar: true
          tag_nightly: false
          tag_latest: true
          # TODO: remove this once we cut over GoCD to using gha for prod images
          tag_suffix: -gha
          google_ar_image_name: us-central1-docker.pkg.dev/sentryio/taskworker/image:${{ github.sha }}
          google_workload_identity_provider: projects/868781662168/locations/global/workloadIdentityPools/prod-github/providers/github-oidc-pool
          google_service_account: gha-gcr-push@sac-prod-sa.iam.gserviceaccount.com

  publish-taskbroker-to-dockerhub:
    runs-on: ubuntu-latest
    needs: [assemble-taskbroker-image]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - shell: bash
        run: |
          echo "${{ secrets.DOCKER_HUB_RW_TOKEN }}" | docker login --username=sentrybuilder --password-stdin

          # We push 3 tags to Dockerhub:
          # first, the full sha of the commit
          docker buildx imagetools create --tag getsentry/taskbroker:${GITHUB_SHA} ghcr.io/getsentry/taskbroker:${{ github.sha }}

          # second, the short sha of the commit
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          docker buildx imagetools create --tag getsentry/taskbroker:${SHORT_SHA} ghcr.io/getsentry/taskbroker:${{ github.sha }}

          # finally, nightly
          docker buildx imagetools create --tag getsentry/taskbroker:nightly ghcr.io/getsentry/taskbroker:${{ github.sha }}

  self-hosted-end-to-end:
    needs: [assemble-taskbroker-image]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Run Sentry self-hosted e2e CI
        uses: getsentry/self-hosted@master
        with:
          project_name: taskbroker
          image_url: ghcr.io/getsentry/taskbroker:${{ github.sha }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-taskworker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
      env:
        GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name != 'pull_request'

    - run: docker buildx create --driver docker-container --use

    - name: build
      run: |
        set -euxo pipefail

        if [ ${{ github.event_name }} = 'push' ]; then
          args=(
            --tag ghcr.io/getsentry/taskworker:latest
            --tag ghcr.io/getsentry/taskworker:amd64-latest
            --push
          )
        else
          args=()
        fi

        docker buildx build \
          --pull \
          --platform linux/amd64 \
          --cache-from ghcr.io/getsentry/taskworker:latest \
          --cache-to type=inline \
          --tag ghcr.io/getsentry/taskworker:${{ github.sha }} \
          "${args[@]}" \
          ./python
