on:
  pull_request:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

    - run: docker buildx create --driver docker-container --use

    - name: build
      run: |
        set -euxo pipefail

        if [ ${{ github.event_name }} = 'push' ]; then
          args=(
            --output type=tar,dest=/tmp/taskbroker-${{ matrix.platform }}.tar
          )
        else
          args=()
        fi

        docker buildx build \
          --pull \
          --platform linux/${{ matrix.platform }} \
          --build-arg "TASKBROKER_GIT_REVISION=${{ github.sha }}" \
          --cache-from ghcr.io/getsentry/taskbroker:latest \
          --cache-to type=inline \
          --tag taskbroker:${{ matrix.platform }} \
          "${args[@]}" \
          .

    - name: Upload Image
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: ${{ github.event_name != 'pull_request' }}
      with:
        name: taskbroker-${{ matrix.platform }}
        path: /tmp/taskbroker-${{ matrix.platform }}.tar

  assemble-taskbroker-image:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: docker buildx create --driver docker-container --use

      - name: Download amd64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: taskbroker-amd64
          path: /tmp

      - name: Load amd64 Image
        run: docker load --input /tmp/taskbroker-amd64.tar

      - name: Download arm64 Image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.2
        with:
          name: taskbroker-arm64
          path: /tmp

      - name: Load arm64 Image
        run: docker load --input /tmp/taskbroker-arm64.tar

      - name: Push to GitHub Container Registry
        run: |
          docker tag taskbroker:amd64 ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64
          docker push ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64
          docker tag taskbroker:arm64 ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64
          docker push ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest create \
            ghcr.io/getsentry/taskbroker:${{ github.sha }} \
            ghcr.io/getsentry/taskbroker:latest \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/taskbroker:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/taskbroker:${{ github.sha }}

  build-taskworker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

    - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
      env:
        GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name != 'pull_request'

    - run: docker buildx create --driver docker-container --use

    - name: build
      run: |
        set -euxo pipefail

        if [ ${{ github.event_name }} = 'push' ]; then
          args=(
            --tag ghcr.io/getsentry/taskworker:latest
            --tag ghcr.io/getsentry/taskworker:amd64-latest
            --push
          )
        else
          args=()
        fi

        docker buildx build \
          --pull \
          --platform linux/amd64 \
          --cache-from ghcr.io/getsentry/taskworker:latest \
          --cache-to type=inline \
          --tag ghcr.io/getsentry/taskworker:${{ github.sha }} \
          "${args[@]}" \
          ./python
