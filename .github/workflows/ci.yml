---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3

      - name: Install Rust Toolchain
        run: rustup toolchain install stable --profile minimal --component clippy --component rustfmt --no-self-update

      - uses: swatinem/rust-cache@v2

      - name: Run Rustfmt
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --workspace --all-features --tests -- -D clippy::all

  test:
    name: Test (ubuntu)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Checkout sentry
        uses: actions/checkout@v4
        with:
          repository: getsentry/sentry
          path: sentry

      - name: Setup steps
        id: setup
        run: |
          # We cannot execute actions that are not placed under .github of the main repo
          mkdir -p .github/actions
          cp -r sentry/.github/actions/* .github/actions

      - name: Setup Sentry
        id: setup-sentry
        uses: ./.github/actions/setup-sentry
        with:
          workdir: sentry
          snuba: false
          kafka: true
          clickhouse: false

      - name: Install protoc
        uses: arduino/setup-protoc@v3

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b # pin@v1
        with:
          key: ${{ github.job }}

      - name: Run Cargo Tests
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # pin@v1
        with:
          command: test
          args: --all

  publish-to-dockerhub:
    name: Publish Taskbroker to DockerHub
    runs-on: ubuntu-20.04
    # if: ${{ (github.ref_name == 'master') }} # Commented out just for testing
    steps:
      - uses: actions/checkout@v3 # v3.1.0
      - name: Pull the GCB image
        id: image_pull
        env:
          IMAGE_URL: us-central1-docker.pkg.dev/sentryio/taskbroker/image:${{ github.sha }}
        shell: bash
        run: |
          echo "We poll for the Docker image that the GCB/GHA build produces until it succeeds or this job times out."
          echo "Polling for $IMAGE_URL"
          timeout 20m bash -c 'until docker pull "$IMAGE_URL" 2>/dev/null; do sleep 10; done'
      - name: Get short SHA for docker tag
        id: short_sha
        shell: bash
        run: |
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          if [[ -z "$SHORT_SHA" ]]; then
            echo "Short SHA empty? Re-running rev-parse."
            git rev-parse --short "$GITHUB_SHA"
          else
            echo "sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          fi
      - name: Push built docker image
        shell: bash
        env:
          SHORT_SHA: ${{ steps.short_sha.outputs.sha }}
          IMAGE_URL: us-central1-docker.pkg.dev/sentryio/taskbroker/image:${{ github.sha }}
        run: |
          # only login if the password is set
          if [[ "${{ secrets.DOCKER_HUB_RW_TOKEN }}" ]]; then echo "${{ secrets.DOCKER_HUB_RW_TOKEN }}" | docker login --username=sentrybuilder --password-stdin; fi
          # We push 3 tags to Dockerhub:
          # first, the full sha of the commit
          docker tag ${IMAGE_URL} getsentry/taskbroker:${GITHUB_SHA}
          docker push getsentry/taskbroker:${GITHUB_SHA}
          # second, the short sha of the commit
          docker tag ${IMAGE_URL} getsentry/taskbroker:${SHORT_SHA}
          docker push getsentry/taskbroker:${SHORT_SHA}
          # finally, nightly
          docker tag ${IMAGE_URL} getsentry/taskbroker:nightly
          docker push getsentry/taskbroker:nightly
